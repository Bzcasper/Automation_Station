{
  description = "An enhanced universal Nix flake example";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = { self, nixpkgs, flake-utils, ... }:
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = import nixpkgs { inherit system; };
      in {
        packages = {
          universal = pkgs.stdenv.mkDerivation {
            pname = "universal-package";
            version = "1.0.0";
            src = ./.;

            # Build dependencies; add any additional packages here if needed.
            buildInputs = [ pkgs.hello ];

            # Placeholder build phase (replace with actual build commands as required).
            buildPhase = "echo 'Nothing to build'";

            # Install phase: copy the hello binary to the output directory.
            installPhase = ''
              mkdir -p $out/bin
              cp ${pkgs.hello}/bin/hello $out/bin/
            '';

            meta = with pkgs.lib; {
              description = "An enhanced universal package example that provides the 'hello' command";
              license = licenses.mit;
              maintainers = [ "your-email@example.com" ];
              platforms = platforms.unix;
            };
          };
        };

        # Optional: Define an app output for easier execution.
        apps = {
          universal = {
            type = "app";
            program = "${self.packages.universal}/bin/hello";
            # You can add further desktop integration or command-line options here.
          };
        };
      });
}
